version: '3'
services:
  pgsql:
    image: postgres:9.4-alpine
    environment:
      POSTGRES_PASSWORD: adminsweatworkspassword
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5432:5432" 
    volumes:
      - "./pgdata:/var/lib/postgresql/data"
      - "./pgsql:/docker-entrypoint-initdb.d"
    networks:
      - net
  nodeapp00:
    build: ./nodejs 
    #command: sh -c "npm run migrate-up"
    restart: always
    ports:
      - "3081:3081" 
    environment:
      DEVOPS_TEST_BACKEND_AWS_REGION: us-west-1
      DEVOPS_TEST_PORT: 3081
    depends_on:
      - "pgsql"
    networks:
      - net
  nodeapp01:
    image: sweatworks_nodeapp00
    restart: always
    ports:
      - "3082:3082" 
    environment:
      DEVOPS_TEST_BACKEND_AWS_REGION: us-west-1
      DEVOPS_TEST_PORT: 3082
    depends_on:
      - "pgsql"
    networks:
      - net
  nodeapp02:
    image: sweatworks_nodeapp00
    restart: always
    ports:
      - "3083:3083" 
    environment:
      DEVOPS_TEST_BACKEND_AWS_REGION: us-west-1
      DEVOPS_TEST_PORT: 3083
    depends_on:
      - "pgsql"
    networks:
      - net
  applb:
    image: haproxy 
    ports:
      - "80:80" 
      - "8080:8080" 
    volumes:
      - "./haproxy:/usr/local/etc/haproxy"
    networks:
      - net
networks:
  net:
volumes:
  pgdata:
